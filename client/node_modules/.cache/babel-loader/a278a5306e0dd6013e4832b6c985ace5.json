{"ast":null,"code":"var _jsxFileName = \"/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Container, Card } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nexport default function LocalRestaurants() {\n  const [coordinates, setCoordinates] = useState({\n    latitude: \"\",\n    longitude: \"\"\n  });\n  const [localRestaurants, setLocalRestaurants] = useState([]);\n  useEffect(() => {\n    getLocation();\n  }, []);\n  useEffect(() => {\n    getLocalRestaurants(coordinates.latitude, coordinates.longitude);\n  }, [coordinates]);\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(position => {\n      // console.log(\"latitude is :\", position.coords.latitude);\n      // console.log(\"longitude is :\", position.coords.longitude);\n      setCoordinates({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    }, function (error) {\n      console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n    }, {\n      enableHighAccuracy: false,\n      timeout: 10000,\n      maximumAge: 10000\n    });\n  }\n\n  const getLocalRestaurants = (latitude, longitude) => {\n    // console.log(latitude, longitude, 'getLocalRestaurants')\n    if (!latitude || !longitude) return;\n    axios.get('https://developers.zomato.com/api/v2.1/search?lat=' + latitude + '&lon=' + longitude, {\n      headers: {\n        \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\"\n      }\n    }).then(res => {\n      setLocalRestaurants(res.data.restaurants);\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n  const cardStyle = {\n    border: \"2px solid black\",\n    padding: \"0px\",\n    margin: \"50px\",\n    width: \"250px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: headingStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Local Restaurants Nearby\"), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, localRestaurants.length ? localRestaurants.map(item => /*#__PURE__*/React.createElement(Card, {\n    key: \"item.restaurant.R.res_id\",\n    className: \"card col-4\",\n    style: cardStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.restaurant.thumb,\n    alt: \"restau-pic\",\n    className: \"card-img-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, item.restaurant.cuisines), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, item.restaurant.location.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, item.restaurant.location.locality), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, item.restaurant.establishment[0]), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, item.restaurant.average_cost_for_two, \"$\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, item.restaurant.user_rating.aggregate_rating)), /*#__PURE__*/React.createElement(\"a\", {\n    href: item.restaurant.url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, item.restaurant.name))) : \"\"));\n}","map":{"version":3,"sources":["/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js"],"names":["React","useState","useEffect","axios","Container","Card","Grid","LocalRestaurants","coordinates","setCoordinates","latitude","longitude","localRestaurants","setLocalRestaurants","getLocation","getLocalRestaurants","navigator","geolocation","getCurrentPosition","position","coords","error","console","code","message","enableHighAccuracy","timeout","maximumAge","get","headers","then","res","data","restaurants","log","catch","err","headingStyle","textAlign","margin","cardStyle","border","padding","width","length","map","item","restaurant","thumb","cuisines","location","address","locality","establishment","average_cost_for_two","user_rating","aggregate_rating","url","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Container, Card } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function LocalRestaurants() {\n\n  const [coordinates, setCoordinates] = useState({ latitude: \"\", longitude: \"\" });\n  const [localRestaurants, setLocalRestaurants] = useState([]);\n\n  useEffect(() => {\n    getLocation();\n  }, [])\n\n  useEffect(() => {\n    getLocalRestaurants(coordinates.latitude, coordinates.longitude);\n  }, [coordinates])\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition((position) => {\n        // console.log(\"latitude is :\", position.coords.latitude);\n        // console.log(\"longitude is :\", position.coords.longitude);\n        setCoordinates({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        })\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 10000\n      }\n    );\n  }\n\n  const getLocalRestaurants = (latitude, longitude) => {\n    // console.log(latitude, longitude, 'getLocalRestaurants')\n    if (!latitude || !longitude) return;\n\n    axios.get('https://developers.zomato.com/api/v2.1/search?lat=' + latitude + '&lon=' + longitude, {\n      headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n    })\n      .then(res => {\n        setLocalRestaurants(res.data.restaurants)\n        console.log(res.data)\n      })\n      .catch(err => console.log(err));\n  }\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n\n  const cardStyle={\n    border:\"2px solid black\",\n    padding:\"0px\",\n    margin:\"50px\",\n    width:\"250px\"\n  }\n\n  return (\n    <div>\n      <h3 style={headingStyle}>Local Restaurants Nearby</h3>\n      <Container>\n        {localRestaurants.length ?\n          (localRestaurants.map(item=>\n            <Card key=\"item.restaurant.R.res_id\" className=\"card col-4\" style={cardStyle}> \n              <img src={item.restaurant.thumb} alt=\"restau-pic\" className=\"card-img-top\" />\n              \n              <div className=\"card-body\">\n              <p>{item.restaurant.cuisines}</p>\n              <p>{item.restaurant.location.address}</p>\n              <p>{item.restaurant.location.locality}</p>\n              <p>{item.restaurant.establishment[0]}</p>\n              <p>{item.restaurant.average_cost_for_two}$</p>\n              <p>{item.restaurant.user_rating.aggregate_rating}</p>\n              </div>\n              <a href={item.restaurant.url} target=\"_blank\">{item.restaurant.name}</a>\n            \n            </Card>\n          )) : \"\"}\n      </Container>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}