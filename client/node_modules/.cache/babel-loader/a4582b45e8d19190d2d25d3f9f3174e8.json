{"ast":null,"code":"var _jsxFileName = \"/Users/sushma/code/Urban-Food/client/src/components/MapBar.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nlet map;\nvar markers = [];\nvar infowindow;\nconst API_KEY = \"AIzaSyCo38ze-EDZsnmNrI0eNQ6acRWXDijXDr8\";\nvar place = [];\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = `https://maps.googleapis.com/maps/api/js?key=` + API_KEY + `&libraries=geometry,places`;\n    script.id = 'googleMaps';\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    script.addEventListener('load', e => {\n      this.onScriptLoad();\n    });\n  }\n\n  onScriptLoad() {\n    map = new window.google.maps.Map(document.getElementById(this.props.id), this.props.options);\n    this.props.onMapLoad(map);\n    var request = {\n      query: 'Museum of Contemporary Art Australia',\n      fields: ['name', 'geometry']\n    };\n    var service = new google.maps.places.PlacesService(map);\n    service.findPlaceFromQuery(request, function (results, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < results.length; i++) {\n          var place = results[i];\n          var marker = new google.maps.Marker({\n            map: map,\n            position: place.geometry.location,\n            title: place.formatted_address\n          });\n          markers.push(marker);\n          infowindow = new google.maps.InfoWindow();\n          marker.addListener('click', () => {\n            infowindow.setContent(place.name);\n            infowindow.open(map, marker);\n          });\n        }\n\n        map.setCenter(results[0].geometry.location);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map\",\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/sushma/code/Urban-Food/client/src/components/MapBar.js"],"names":["React","ReactDOM","map","markers","infowindow","API_KEY","place","Map","Component","constructor","props","componentDidMount","script","document","createElement","type","src","id","async","defer","body","appendChild","addEventListener","e","onScriptLoad","window","google","maps","getElementById","options","onMapLoad","request","query","fields","service","places","PlacesService","findPlaceFromQuery","results","status","PlacesServiceStatus","OK","i","length","marker","Marker","position","geometry","location","title","formatted_address","push","InfoWindow","addListener","setContent","name","open","setCenter","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nlet map;\nvar markers = [];\nvar infowindow;\nconst API_KEY = \"AIzaSyCo38ze-EDZsnmNrI0eNQ6acRWXDijXDr8\";\nvar place = [];\n\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = `https://maps.googleapis.com/maps/api/js?key=` + API_KEY + `&libraries=geometry,places`;\n    script.id = 'googleMaps';\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    script.addEventListener('load', e => {\n      this.onScriptLoad()\n    })\n\n  }\n\n  onScriptLoad() {\n    map = new window.google.maps.Map(document.getElementById(this.props.id), this.props.options);\n    this.props.onMapLoad(map)\n\n    var request = {\n      query: 'Museum of Contemporary Art Australia',\n      fields: ['name', 'geometry'],\n    };\n\n    var service = new google.maps.places.PlacesService(map);\n\n    service.findPlaceFromQuery(request, function (results, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < results.length; i++) {\n\n          var place = results[i];\n          var marker = new google.maps.Marker({\n            map: map,\n            position: place.geometry.location,\n            title: place.formatted_address,\n          });\n          markers.push(marker);\n\n          infowindow = new google.maps.InfoWindow();\n\n          marker.addListener('click', () => {\n            infowindow.setContent(place.name);\n            infowindow.open(map, marker);\n          });\n        }\n        map.setCenter(results[0].geometry.location);\n      }\n\n    })\n  }\n\n\n  render() {\n    return (\n      <div id=\"root\" >\n        <div className=\"map\" id={this.props.id} />\n      </div>\n\n    )\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}