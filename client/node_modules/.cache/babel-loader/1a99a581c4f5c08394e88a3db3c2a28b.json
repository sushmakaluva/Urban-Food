{"ast":null,"code":"var _jsxFileName = \"/Users/sushma/code/Urban-Food/client/src/components/Collections.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport CollectionsCard from './CollectionsCard';\nimport { CityContext } from \"../utils/CityContext\";\nexport default function Collections() {\n  const [collections, setCollections] = useState([]);\n  const {\n    cityDetails\n  } = useContext(CityContext);\n  const {\n    city_id,\n    lat,\n    long\n  } = cityDetails;\n  useEffect(() => {\n    getCollections(city_id, lat, long);\n  }, [cityDetails]);\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n  const subHeadingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\",\n    fontWeight: \"lighter\"\n  };\n\n  const getCollections = (city_id, lat, long) => {\n    let queryString = '';\n    if (city_id) queryString = `city_id=${city_id}`;else if (lat && long) queryString = `lat=${lat}&lon=${long}`;else return;\n    axios.get(`https://developers.zomato.com/api/v2.1/collections?${queryString}`, {\n      headers: {\n        \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\"\n      }\n    }).then(res => {\n      setCollections(res.data.collections);\n      console.log(\"collections\", res.data);\n    }).catch(err => console.log(err));\n  };\n\n  return collections.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: headingStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Collections\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: subHeadingStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Explore curated lists of top restaurants, cafes, pubs, and bars in Toronto, based on trends\"), /*#__PURE__*/React.createElement(CollectionsCard, {\n    collections: collections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sushma/code/Urban-Food/client/src/components/Collections.js"],"names":["React","useState","useEffect","useContext","axios","CollectionsCard","CityContext","Collections","collections","setCollections","cityDetails","city_id","lat","long","getCollections","headingStyle","textAlign","margin","subHeadingStyle","fontWeight","queryString","get","headers","then","res","data","console","log","catch","err","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,eAAe,SAASC,WAAT,GAAuB;AAEpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAkBP,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA;AAAhB,MAAyBH,WAA/B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,cAAc,CAACH,OAAD,EAAUC,GAAV,EAAeC,IAAf,CAAd;AACD,GAFQ,EAEN,CAACH,WAAD,CAFM,CAAT;AAIA,QAAMK,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,MADQ;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAArB;AAKA,QAAMC,eAAe,GAAG;AACtBF,IAAAA,SAAS,EAAE,MADW;AAEtBC,IAAAA,MAAM,EAAE,MAFc;AAGtBE,IAAAA,UAAU,EAAE;AAHU,GAAxB;;AAMA,QAAML,cAAc,GAAG,CAACH,OAAD,EAAUC,GAAV,EAAeC,IAAf,KAAwB;AAC7C,QAAIO,WAAW,GAAG,EAAlB;AACA,QAAIT,OAAJ,EAAaS,WAAW,GAAI,WAAUT,OAAQ,EAAjC,CAAb,KACK,IAAIC,GAAG,IAAIC,IAAX,EAAiBO,WAAW,GAAI,OAAMR,GAAI,QAAOC,IAAK,EAArC,CAAjB,KACA;AAELT,IAAAA,KAAK,CAACiB,GAAN,CAAW,sDAAqDD,WAAY,EAA5E,EAA+E;AAC7EE,MAAAA,OAAO,EAAE;AAAE,oBAAY;AAAd;AADoE,KAA/E,EAGGC,IAHH,CAGQC,GAAG,IAAI;AACXf,MAAAA,cAAc,CAACe,GAAG,CAACC,IAAJ,CAASjB,WAAV,CAAd;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,GAAG,CAACC,IAA/B;AACD,KANH,EAOGG,KAPH,CAOSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAPhB;AAQD,GAdD;;AAgBA,SACErB,WAAW,CAACsB,MAAZ,GAAqB,CAArB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,KAAK,EAAEf,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,eAEC;AAAI,IAAA,KAAK,EAAEG,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAFD,eAKC,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEV,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAFH;AAUD","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport CollectionsCard from './CollectionsCard';\nimport { CityContext } from \"../utils/CityContext\";\n\nexport default function Collections() {\n\n  const [collections, setCollections] = useState([]);\n  const { cityDetails } = useContext(CityContext);\n  const { city_id, lat, long } = cityDetails\n\n  useEffect(() => {\n    getCollections(city_id, lat, long);\n  }, [cityDetails])\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n\n  const subHeadingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\",\n    fontWeight: \"lighter\"\n  }\n\n  const getCollections = (city_id, lat, long) => {\n    let queryString = '';\n    if (city_id) queryString = `city_id=${city_id}`\n    else if (lat && long) queryString = `lat=${lat}&lon=${long}`\n    else return;\n\n    axios.get(`https://developers.zomato.com/api/v2.1/collections?${queryString}`, {\n      headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n    })\n      .then(res => {\n        setCollections(res.data.collections)\n        console.log(\"collections\", res.data)\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    collections.length > 0 &&\n    (<div>\n      <h2 style={headingStyle}>Collections</h2>\n      <h4 style={subHeadingStyle}>Explore curated lists of top restaurants, cafes, pubs, and bars in Toronto,\n      based on trends\n      </h4>\n      <CollectionsCard collections={collections} />\n    </div>)\n  )\n}\n"]},"metadata":{},"sourceType":"module"}