{"ast":null,"code":"var _jsxFileName = \"/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Container, Card } from 'react-bootstrap';\nexport default function LocalRestaurants() {\n  const [coordinates, setCoordinates] = useState({\n    Latitude: \"\",\n    Longitude: \"\"\n  });\n  const [localRestaurants, setLocalRestaurants] = useState([]);\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      setCoordinates({\n        Latitude: \"position.coords.latitude\",\n        Longitude: \"position.coords.longitude\"\n      }, () => {\n        console.log(cordinates);\n      });\n      console.log(coordinates.Latitude, coordinates.Longitude); // getLocalRestaurants(position.coords.latitude, position.coords.longitude);\n    }, function (error) {\n      console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n    }, {\n      enableHighAccuracy: false,\n      timeout: 10000,\n      maximumAge: 10000\n    });\n  }\n\n  const getLocalRestaurants = (Latitude, Longitude) => {\n    axios.get('https://developers.zomato.com/api/v2.1/search?lat=' + Latitude + '&lon=' + Longitude, {\n      headers: {\n        \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\"\n      }\n    }).then(res => {\n      setLocalRestaurants(res.data.restaurants);\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: headingStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Local Restaurants Nearby\"), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, localRestaurants.length ? localRestaurants.map((item, i) => /*#__PURE__*/React.createElement(Card, {\n    key: \"i\",\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.restaurant.thumb,\n    alt: \"restau-pic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: item.restaurant.url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, item.restaurant.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, item.restaurant.cuisines), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, item.restaurant.location.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, item.restaurant.location.locality), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, item.restaurant.establishment[0]), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, item.restaurant.average_cost_for_two, \"$\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, item.restaurant.user_rating.aggregate_rating))) : \"\"));\n}","map":{"version":3,"sources":["/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js"],"names":["React","useState","useEffect","axios","Container","Card","LocalRestaurants","coordinates","setCoordinates","Latitude","Longitude","localRestaurants","setLocalRestaurants","getLocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","cordinates","error","code","message","enableHighAccuracy","timeout","maximumAge","getLocalRestaurants","get","headers","then","res","data","restaurants","catch","err","headingStyle","textAlign","margin","length","map","item","i","restaurant","thumb","url","name","cuisines","location","address","locality","establishment","average_cost_for_two","user_rating","aggregate_rating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Container, Card } from 'react-bootstrap';\n\nexport default function LocalRestaurants() {\n\n  const [coordinates, setCoordinates] = useState({ Latitude: \"\", Longitude: \"\" });\n  const [localRestaurants, setLocalRestaurants] = useState([]);\n\n  useEffect(() => {\n    getLocation();\n  }, [])\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        setCoordinates({\n          Latitude: \"position.coords.latitude\",\n          Longitude: \"position.coords.longitude\"\n        }, () => {\n          console.log(cordinates)\n        })\n        console.log(coordinates.Latitude, coordinates.Longitude)\n        // getLocalRestaurants(position.coords.latitude, position.coords.longitude);\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 10000\n      }\n    );\n  }\n\n  const getLocalRestaurants = (Latitude, Longitude) => {\n    axios.get('https://developers.zomato.com/api/v2.1/search?lat=' + Latitude + '&lon=' + Longitude, {\n      headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n    })\n      .then(res => {\n        setLocalRestaurants(res.data.restaurants)\n        console.log(res.data)\n      })\n      .catch(err => console.log(err));\n  }\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n\n  return (\n    <div>\n      <h3 style={headingStyle}>Local Restaurants Nearby</h3>\n      <Container>\n        {localRestaurants.length ?\n          (localRestaurants.map((item,i) => \n            <Card key=\"i\" className=\"col-4\">\n              <img src={item.restaurant.thumb} alt=\"restau-pic\" />\n              <br/>\n              <a href={item.restaurant.url} target=\"_blank\">{item.restaurant.name}</a>\n              <p>{item.restaurant.cuisines}</p>\n              <p>{item.restaurant.location.address}</p>\n              <p>{item.restaurant.location.locality}</p>\n              <p>{item.restaurant.establishment[0]}</p>\n              <p>{item.restaurant.average_cost_for_two}$</p>\n              <p>{item.restaurant.user_rating.aggregate_rating}</p>\n            </Card>\n          )) : \"\"}\n      </Container>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}