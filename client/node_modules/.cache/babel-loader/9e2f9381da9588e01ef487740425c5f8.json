{"ast":null,"code":"var _jsxFileName = \"/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Container, Card } from 'react-bootstrap';\nexport default function LocalRestaurants() {\n  const [coordinates, setCoordinates] = useState({\n    Latitude: \" \",\n    Longitude: \" \"\n  });\n  const [localRestaurants, setLocalRestaurants] = useState([]);\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      setCoordinates({\n        Latitude: \"position.coords.latitude\",\n        Longitude: \"position.coords.longitude\"\n      });\n      console.log(coordinates.Latitude, coordinates.Longitude);\n      getLocalRestaurants(position.coords.latitude, position.coords.longitude);\n    }, function (error) {\n      console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n    }, {\n      enableHighAccuracy: false,\n      timeout: 10000,\n      maximumAge: 10000\n    });\n  }\n\n  const getLocalRestaurants = (Latitude, Longitude) => {\n    axios.get('https://developers.zomato.com/api/v2.1/search?count=20&lat=' + Latitude + '&lon=' + Longitude, {\n      headers: {\n        \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\"\n      }\n    }).then(res => {\n      setLocalRestaurants(res.data.restaurants);\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: headingStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Local Restaurants Nearby\"), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, localRestaurants.length ? localRestaurants.map((item, i) => /*#__PURE__*/React.createElement(Card, {\n    key: \"i\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.restaurant.featured_image,\n    alt: \"restau-pic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: item.restaurant.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, item.restaurant.name))) : \"\"));\n}","map":{"version":3,"sources":["/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js"],"names":["React","useState","useEffect","axios","Container","Card","LocalRestaurants","coordinates","setCoordinates","Latitude","Longitude","localRestaurants","setLocalRestaurants","getLocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","getLocalRestaurants","error","code","message","enableHighAccuracy","timeout","maximumAge","get","headers","then","res","data","restaurants","catch","err","headingStyle","textAlign","margin","length","map","item","i","restaurant","featured_image","url","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Container, Card } from 'react-bootstrap';\n\nexport default function LocalRestaurants() {\n\n  const [coordinates, setCoordinates] = useState({ Latitude: \" \", Longitude: \" \" });\n  const [localRestaurants, setLocalRestaurants] = useState([]);\n\n  useEffect(() => {\n    getLocation();\n  }, [])\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        setCoordinates({\n          Latitude: \"position.coords.latitude\",\n          Longitude: \"position.coords.longitude\"\n        })\n        console.log(coordinates.Latitude, coordinates.Longitude)\n        getLocalRestaurants(position.coords.latitude, position.coords.longitude);\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 10000\n      }\n    );\n  }\n\n  const getLocalRestaurants = (Latitude, Longitude) => {\n    axios.get('https://developers.zomato.com/api/v2.1/search?count=20&lat=' + Latitude + '&lon=' + Longitude, {\n      headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n    })\n      .then(res => {\n        setLocalRestaurants(res.data.restaurants)\n        console.log(res.data)\n      })\n      .catch(err => console.log(err));\n  }\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n\n  return (\n    <div>\n      <h3 style={headingStyle}>Local Restaurants Nearby</h3>\n      <Container>\n        {localRestaurants.length ?\n          (localRestaurants.map((item,i) => \n            <Card key=\"i\" className=\"\">\n              <img src={item.restaurant.featured_image} alt=\"restau-pic\" />\n              <a href={item.restaurant.url}>{item.restaurant.name}</a>\n            </Card>\n          )) : \"\"}\n      </Container>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}