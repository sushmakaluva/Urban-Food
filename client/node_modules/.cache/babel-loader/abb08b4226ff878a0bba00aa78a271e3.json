{"ast":null,"code":"var _jsxFileName = \"/Users/sushma/code/Urban-Food/client/src/components/SearchBar.js\";\nimport React, { useState, useContext } from 'react';\nimport axios from \"axios\";\nimport { InputAdornment, TextField, IconButton } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport RoomIcon from '@material-ui/icons/Room';\nimport CityContext from \"../utils/CityContext\"; // import Select from 'react-select';\n\nexport default function SearchBar(props) {\n  const {\n    cityDetails,\n    setCityDetails\n  } = useContext(CityContext);\n  const [location, setLocation] = useState('');\n  const [searchKeyword, setSearchKeyword] = useState();\n  const [locationSuggestions, setLocationSuggestions] = useState([]);\n  const searchLocationStyle = {\n    backgroundColor: \"white\",\n    width: \"20%\",\n    marginBottom: \"20px\",\n    border: \"none\"\n  };\n  const searchBarStyle = {\n    backgroundColor: \"white\",\n    width: \"40%\",\n    marginBottom: \"30px\",\n    border: \"none\"\n  };\n\n  const locationOnChange = e => {\n    setLocation(e.target.value);\n    getLocationSuggestions(location);\n    getCityId(location);\n  };\n\n  const SearchOnChange = e => {\n    setSearchKeyword(e.target.value);\n  };\n\n  const getCityId = location => {\n    axios.get('https://developers.zomato.com/api/v2.1/locations?query=' + location, {\n      headers: {\n        \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\"\n      }\n    }).then(res => {\n      setCityDetails({\n        city_id: res.data.location_suggestions.city_id,\n        city_name: res.data.location_suggestions.city_name,\n        lat: res.data.location_suggestions.latitude,\n        long: res.data.location_suggestions.longitude\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const getLocationSuggestions = locationKeyword => {\n    if (!locationKeyword) return 'Toronto';\n    axios.get('https://developers.zomato.com/api/v2.1/locations?count=10&query=' + locationKeyword, {\n      headers: {\n        \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\"\n      }\n    }).then(res => {\n      setLocationSuggestions(res.data.location_suggestions);\n      console.log(\"location suggestions\", res.data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-half-width\",\n    placeholder: \"Location\",\n    value: props.location // options={locationSuggestions}\n    ,\n    onChange: locationOnChange,\n    autoComplete: \"on\",\n    variant: \"outlined\",\n    style: searchLocationStyle,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(RoomIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      })),\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-full-width\",\n    placeholder: \"Search for a restaurant, cuisine or a dish\",\n    value: searchKeyword,\n    onChange: SearchOnChange,\n    autoComplete: \"on\",\n    variant: \"outlined\",\n    style: searchBarStyle,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sushma/code/Urban-Food/client/src/components/SearchBar.js"],"names":["React","useState","useContext","axios","InputAdornment","TextField","IconButton","SearchIcon","ArrowDropDownIcon","RoomIcon","CityContext","SearchBar","props","cityDetails","setCityDetails","location","setLocation","searchKeyword","setSearchKeyword","locationSuggestions","setLocationSuggestions","searchLocationStyle","backgroundColor","width","marginBottom","border","searchBarStyle","locationOnChange","e","target","value","getLocationSuggestions","getCityId","SearchOnChange","get","headers","then","res","city_id","data","location_suggestions","city_name","lat","latitude","long","longitude","catch","err","console","log","locationKeyword","startAdornment","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState,useContext } from 'react';\nimport axios from \"axios\";\nimport { InputAdornment, TextField, IconButton } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport RoomIcon from '@material-ui/icons/Room';\nimport CityContext from \"../utils/CityContext\";\n// import Select from 'react-select';\n\nexport default function SearchBar(props) {\n\n  const { cityDetails, setCityDetails } = useContext(CityContext);\n  const [location, setLocation] = useState('');\n  const [searchKeyword, setSearchKeyword] = useState();\n  const [locationSuggestions, setLocationSuggestions] = useState([]);\n\n\n  const searchLocationStyle = { backgroundColor: \"white\", width: \"20%\", marginBottom: \"20px\", border: \"none\" };\n\n  const searchBarStyle = { backgroundColor: \"white\", width: \"40%\", marginBottom: \"30px\", border: \"none\" }\n\n  const locationOnChange = (e) => {\n    setLocation(e.target.value)\n    getLocationSuggestions(location)\n    getCityId(location);\n  }\n\n  const SearchOnChange = (e) => {\n    setSearchKeyword(e.target.value)\n  }\n\n  const getCityId=(location)=>{\n   axios.get('https://developers.zomato.com/api/v2.1/locations?query='+location,{\n    headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n   })\n   .then(res=>{\n    setCityDetails(\n      {\n      city_id:res.data.location_suggestions.city_id,\n      city_name:res.data.location_suggestions.city_name,\n      lat:res.data.location_suggestions.latitude,\n      long:res.data.location_suggestions.longitude\n   })\n  })\n   .catch(err => console.log(err));\n  }\n\n  const getLocationSuggestions = (locationKeyword) => {\n    if (!locationKeyword) return 'Toronto';\n    axios.get('https://developers.zomato.com/api/v2.1/locations?count=10&query=' + locationKeyword, {\n      headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n    })\n      .then(res => {\n        setLocationSuggestions(res.data.location_suggestions)\n        console.log(\"location suggestions\", res.data)\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div>\n        <span>\n          {/* <Select\n          options={locationSuggestions}\n          value={location}\n          onClick={locationOnChange}\n        /> */}\n\n          <TextField\n            id=\"standard-half-width\"\n            placeholder=\"Location\"\n            value={props.location}\n            // options={locationSuggestions}\n            onChange={locationOnChange}\n            autoComplete=\"on\"\n            variant=\"outlined\"\n            style={searchLocationStyle}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <RoomIcon />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton>\n                    <ArrowDropDownIcon />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n          />\n\n          <TextField\n            id=\"standard-full-width\"\n            placeholder=\"Search for a restaurant, cuisine or a dish\"\n            value={searchKeyword}\n            onChange={SearchOnChange}\n            autoComplete=\"on\"\n            variant=\"outlined\"\n            style={searchBarStyle}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <IconButton>\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n          />\n        </span>\n        {/* {console.log(location)} */}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}