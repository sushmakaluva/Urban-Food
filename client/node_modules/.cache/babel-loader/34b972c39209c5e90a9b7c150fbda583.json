{"ast":null,"code":"var _jsxFileName = \"/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nexport default function LocalRestaurants() {\n  const [coordinates, setCoordinates] = useState({\n    Latitude: \" \",\n    Longitude: \" \"\n  });\n  const [localRestaurants, setLocalRestaurants] = useState();\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      setCoordinates({\n        Latitude: \"position.coords.latitude\",\n        Longitude: \"position.coords.longitude\"\n      });\n      console.log(coordinates.Latitude, coordinates.Longitude);\n      getLocalRestaurants(position.coords.latitude, position.coords.longitude);\n    }, function (error) {\n      console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n    }, {\n      enableHighAccuracy: false,\n      timeout: 10000,\n      maximumAge: 10000\n    });\n  }\n\n  const getLocalRestaurants = (Latitude, Longitude) => {\n    axios.get('https://developers.zomato.com/api/v2.1/search?lat=' + Latitude + '&lon=' + Longitude, {// headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n    }).then(res => {\n      setLocalRestaurants(res.data); // console.log(res.data)\n    }).catch(err => console.log(err));\n  };\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: headingStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Local Restaurants Nearby\"));\n}","map":{"version":3,"sources":["/Users/sushma/code/Urban-Food/client/src/components/LocalRestaurants.js"],"names":["React","useState","useEffect","axios","LocalRestaurants","coordinates","setCoordinates","Latitude","Longitude","localRestaurants","setLocalRestaurants","getLocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","getLocalRestaurants","error","code","message","enableHighAccuracy","timeout","maximumAge","get","then","res","data","catch","err","headingStyle","textAlign","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAEzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC;AAAEM,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,SAAS,EAAE;AAA5B,GAAD,CAA9C;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,EAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,WAAT,GAAuB;AACrBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACG,MAAT,CAAgBC,QAA7C;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,MAAT,CAAgBE,SAA9C;AACAd,MAAAA,cAAc,CAAC;AACbC,QAAAA,QAAQ,EAAE,0BADG;AAEbC,QAAAA,SAAS,EAAE;AAFE,OAAD,CAAd;AAIAQ,MAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAW,CAACE,QAAxB,EAAkCF,WAAW,CAACG,SAA9C;AACAa,MAAAA,mBAAmB,CAACN,QAAQ,CAACG,MAAT,CAAgBC,QAAjB,EAA2BJ,QAAQ,CAACG,MAAT,CAAgBE,SAA3C,CAAnB;AACD,KAVH,EAWE,UAAUE,KAAV,EAAiB;AACfN,MAAAA,OAAO,CAACM,KAAR,CAAc,kBAAkBA,KAAK,CAACC,IAAxB,GAA+B,KAA/B,GAAuCD,KAAK,CAACE,OAA3D;AACD,KAbH,EAcE;AACEC,MAAAA,kBAAkB,EAAE,KADtB;AAEEC,MAAAA,OAAO,EAAE,KAFX;AAGEC,MAAAA,UAAU,EAAE;AAHd,KAdF;AAoBD;;AAED,QAAMN,mBAAmB,GAAG,CAACd,QAAD,EAAWC,SAAX,KAAyB;AACnDL,IAAAA,KAAK,CAACyB,GAAN,CAAU,uDAAuDrB,QAAvD,GAAkE,OAAlE,GAA4EC,SAAtF,EAAiG,CAC/F;AAD+F,KAAjG,EAGGqB,IAHH,CAGQC,GAAG,IAAG;AACVpB,MAAAA,mBAAmB,CAACoB,GAAG,CAACC,IAAL,CAAnB,CADU,CAEV;AACD,KANH,EAOGC,KAPH,CAOSC,GAAG,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAPhB;AAQD,GATD;;AAWA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,MADQ;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAArB;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAEF,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\nexport default function LocalRestaurants() {\n\n  const [coordinates, setCoordinates] = useState({ Latitude: \" \", Longitude: \" \" });\n  const [localRestaurants, setLocalRestaurants] = useState();\n\n  useEffect(() => {\n    getLocation();\n  }, [])\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        setCoordinates({\n          Latitude: \"position.coords.latitude\",\n          Longitude: \"position.coords.longitude\"\n        })\n        console.log(coordinates.Latitude, coordinates.Longitude)\n        getLocalRestaurants(position.coords.latitude, position.coords.longitude);\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 10000\n      }\n    );\n  }\n\n  const getLocalRestaurants = (Latitude, Longitude) => {\n    axios.get('https://developers.zomato.com/api/v2.1/search?lat=' + Latitude + '&lon=' + Longitude, {\n      // headers: { \"user-key\": \"7643451d5684bd9eb0116cdfd72673a9\" }\n    })\n      .then(res =>{\n        setLocalRestaurants(res.data)\n        // console.log(res.data)\n      })\n      .catch(err => console.log(err));\n  }\n\n  const headingStyle = {\n    textAlign: \"left\",\n    margin: \"20px\"\n  };\n\n  return (\n    <div>\n      <h3 style={headingStyle}>Local Restaurants Nearby</h3>\n{}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}